#!/bin/bash

echo "Fill in the port number which one you would like to use when you use putty (ssh to your server)"
read -p "Enter new port: "  port
echo "Fill in the username which one you would like to use when logging into the server. This username will be used to login and after that you can login to the root user."
read -p "Enter a new username: " username
echo "Have a look at: https://github.com/wavesplatform/Waves/releases/ , and fill in the last version that you would like to install. So for example \"1.1.3\" or \"1.1.2\".
!!!!Don't forget the dots in between otherwise it won't work!!!!" 
read -p "Enter Waves Version: "  version
echo "Fill in your seed over here. Always use another wallet for the lease node and not your own one!"
read -p "Enter your seed: "  SEED
echo "Fill in the name of your node"
read -p "Enter node name: " nodename
echo "Fill in the IP adres of your node"
read -p "Enter ip address: " ipaddress
echo "Fill in the password that you would like to encrypt the local wallet file with. (So on the system itself there will be a wallet.dat file who will be encrypted with this password)"
read -p "Enter wavesnode wallet password: " password_wavesnode

#3.1 update OS
apt-get update
apt-get upgrade
echo "update and upgrade are completed"
sleep 5

#3.1 install additional software
apt install -y nano
echo "Installation additional software is completed"
sleep 5

#3.2 Change default SSH listing port
sed -i "s/#port 22/Port $port/Ig" /etc/ssh/sshd_config
sleep 5
/etc/init.d/ssh restart
sleep 5
echo "default port is changed to $port"

#3.3 Add new user
echo "MAKE A NEW USER"
adduser "$username"
echo "$username is created"
sleep 5

#3.4 Change root password
echo "CHANGE PASSWORD FROM ROOT USER"
passwd root

#3.5 Disable server access via root user
sed -i "s/PermitRootLogin yes/PermitRootLogin no/Ig" /etc/ssh/sshd_config
sleep 5
/etc/init.d/ssh restart
echo "disabled server acces via root user"
sleep 5

#3.6 Install Fail2ban software
apt-get install fail2ban
echo "fail2ban is been installed"

#4 Install aditional software
apt install -y software-properties-common
apt install -y build-essential
apt install python-pip
pip install base58
echo "additional software is been installed"

#5 install java development kit
add-apt-repository -y ppa:webupd8team/java
apt update
apt install openjdk-8-jdk
echo "Java is installed"
sleep 5
echo "check if java version = 1.8"
java -version
sleep 30

#6 Downloading waves
wget https://github.com/wavesplatform/Waves/releases/download/v"$version"/waves_"$version"_all.deb
echo "Downloaded Waves $version!"

#7 Install waves
dpkg -i waves_"$version"_all.deb
echo "Waves is been installed"
sleep 5

#9 Encode your seed
touch base58script.py
echo "import base58" >> base58script.py
echo "seed = \"$SEED\"" >> base58script.py
echo "encoded_seed = base58.b58encode(seed)" >> base58script.py
echo "print(encoded_seed)" >> base58script.py
python base58script.py >> base58string
cat base58string
encoded_seed=$( cat base58string)
echo "Encode seed is saved in base58string file"
sleep 10

#10 Configure waves.conf file
#Set wavesnode name
sed -i "s/# node-name = \"My MAINNET node\"/node-name = \"$nodename\"/Ig" /usr/share/waves/conf/waves.conf

#Set Wavesnode  IP address
sed -i "s/# declared-address = \"1.2.3.4:6868\"/declared-address = \"$ipaddress:6868\"/Ig" /usr/share/waves/conf/waves.conf

#Set wavesnode password
sed -i "s/# password =/password = \"$password_wavesnode\"/Ig" /usr/share/waves/conf/waves.conf

#Set node seed
sed -i "s/# seed =/seed = \"$encoded_seed\"/Ig" /usr/share/waves/conf/waves.conf
echo "The configuration is been set, please notify that API is not ON"
sleep 30

#New step state downloading and applying
wget http://blockchain.wavesnodes.com/blockchain_last.tar
echo "Downloaded the blockchain"
sleep 20

rm -rdf /var/lib/waves/data
tar -xvf blockchain_last.tar -C /var/lib/waves/
echo "The blockchain is succesfully imported"

#11 start waves service
echo "Waves will started"
systemctl start waves

#clean up old files
rm base58string
rm base58script.py
rm waves_"$version"_all.deb
rm blockchain_last.tar

#open journalctl to see if everything works
journalctl -u waves -f